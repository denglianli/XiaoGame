// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Enums.proto

package org.redstone.protobuf.msg;

/**
 * Protobuf type {@code org.redstone.protobuf.msg.Enums}
 */
public  final class Enums extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.redstone.protobuf.msg.Enums)
    EnumsOrBuilder {
  // Use Enums.newBuilder() to construct.
  private Enums(com.google.protobuf.GeneratedMessage.Builder builder) {
    super(builder);
  }
  private Enums() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Enums(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.redstone.protobuf.msg.EnumsOuterClass.internal_static_org_redstone_protobuf_msg_Enums_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.redstone.protobuf.msg.EnumsOuterClass.internal_static_org_redstone_protobuf_msg_Enums_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.redstone.protobuf.msg.Enums.class, org.redstone.protobuf.msg.Enums.Builder.class);
  }

  public static final com.google.protobuf.Parser<Enums> PARSER =
      new com.google.protobuf.AbstractParser<Enums>() {
    public Enums parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Enums(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<Enums> getParserForType() {
    return PARSER;
  }

  /**
   * Protobuf enum {@code org.redstone.protobuf.msg.Enums.ChessType}
   */
  public enum ChessType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>None = 1;</code>
     */
    None(0, 1),
    /**
     * <code>White = 2;</code>
     */
    White(1, 2),
    /**
     * <code>Black = 3;</code>
     */
    Black(2, 3),
    ;

    /**
     * <code>None = 1;</code>
     */
    public static final int None_VALUE = 1;
    /**
     * <code>White = 2;</code>
     */
    public static final int White_VALUE = 2;
    /**
     * <code>Black = 3;</code>
     */
    public static final int Black_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    public static ChessType valueOf(int value) {
      switch (value) {
        case 1: return None;
        case 2: return White;
        case 3: return Black;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChessType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChessType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChessType>() {
            public ChessType findValueByNumber(int number) {
              return ChessType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.redstone.protobuf.msg.Enums.getDescriptor().getEnumTypes().get(0);
    }

    private static final ChessType[] VALUES = values();

    public static ChessType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChessType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.redstone.protobuf.msg.Enums.ChessType)
  }

  /**
   * Protobuf enum {@code org.redstone.protobuf.msg.Enums.Camp}
   */
  public enum Camp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NoneCamp = 1;</code>
     */
    NoneCamp(0, 1),
    /**
     * <code>WhiteCamp = 2;</code>
     */
    WhiteCamp(1, 2),
    /**
     * <code>BlackCamp = 3;</code>
     */
    BlackCamp(2, 3),
    ;

    /**
     * <code>NoneCamp = 1;</code>
     */
    public static final int NoneCamp_VALUE = 1;
    /**
     * <code>WhiteCamp = 2;</code>
     */
    public static final int WhiteCamp_VALUE = 2;
    /**
     * <code>BlackCamp = 3;</code>
     */
    public static final int BlackCamp_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    public static Camp valueOf(int value) {
      switch (value) {
        case 1: return NoneCamp;
        case 2: return WhiteCamp;
        case 3: return BlackCamp;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Camp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Camp>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Camp>() {
            public Camp findValueByNumber(int number) {
              return Camp.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.redstone.protobuf.msg.Enums.getDescriptor().getEnumTypes().get(1);
    }

    private static final Camp[] VALUES = values();

    public static Camp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Camp(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.redstone.protobuf.msg.Enums.Camp)
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    unknownFields.writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static org.redstone.protobuf.msg.Enums parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.redstone.protobuf.msg.Enums parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.redstone.protobuf.msg.Enums parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.redstone.protobuf.msg.Enums parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.redstone.protobuf.msg.Enums parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.redstone.protobuf.msg.Enums parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.redstone.protobuf.msg.Enums parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.redstone.protobuf.msg.Enums parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.redstone.protobuf.msg.Enums parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.redstone.protobuf.msg.Enums parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return new Builder(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.redstone.protobuf.msg.Enums prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.redstone.protobuf.msg.Enums}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.redstone.protobuf.msg.Enums)
      org.redstone.protobuf.msg.EnumsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.redstone.protobuf.msg.EnumsOuterClass.internal_static_org_redstone_protobuf_msg_Enums_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.redstone.protobuf.msg.EnumsOuterClass.internal_static_org_redstone_protobuf_msg_Enums_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.redstone.protobuf.msg.Enums.class, org.redstone.protobuf.msg.Enums.Builder.class);
    }

    // Construct using org.redstone.protobuf.msg.Enums.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.redstone.protobuf.msg.EnumsOuterClass.internal_static_org_redstone_protobuf_msg_Enums_descriptor;
    }

    public org.redstone.protobuf.msg.Enums getDefaultInstanceForType() {
      return org.redstone.protobuf.msg.Enums.getDefaultInstance();
    }

    public org.redstone.protobuf.msg.Enums build() {
      org.redstone.protobuf.msg.Enums result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.redstone.protobuf.msg.Enums buildPartial() {
      org.redstone.protobuf.msg.Enums result = new org.redstone.protobuf.msg.Enums(this);
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.redstone.protobuf.msg.Enums) {
        return mergeFrom((org.redstone.protobuf.msg.Enums)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.redstone.protobuf.msg.Enums other) {
      if (other == org.redstone.protobuf.msg.Enums.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.redstone.protobuf.msg.Enums parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.redstone.protobuf.msg.Enums) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.redstone.protobuf.msg.Enums)
  }

  // @@protoc_insertion_point(class_scope:org.redstone.protobuf.msg.Enums)
  private static final org.redstone.protobuf.msg.Enums defaultInstance;static {
    defaultInstance = new org.redstone.protobuf.msg.Enums();
  }

  public static org.redstone.protobuf.msg.Enums getDefaultInstance() {
    return defaultInstance;
  }

  public org.redstone.protobuf.msg.Enums getDefaultInstanceForType() {
    return defaultInstance;
  }

}


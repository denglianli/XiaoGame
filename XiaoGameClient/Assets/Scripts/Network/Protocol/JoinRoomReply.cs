//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: JoinRoomReply.proto
// Note: requires additional types generated from: BoardSync.proto
// Note: requires additional types generated from: Enums.proto
namespace message
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"JoinRoomReply")]
  public partial class JoinRoomReply : global::ProtoBuf.IExtensible
  {
    public JoinRoomReply() {}
    
    private message.Enums.Camp _camp = message.Enums.Camp.;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"camp", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(message.Enums.Camp.)]
    public message.Enums.Camp camp
    {
      get { return _camp; }
      set { _camp = value; }
    }
    private int _roomId = default(int);
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"roomId", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(int))]
    public int roomId
    {
      get { return _roomId; }
      set { _roomId = value; }
    }
    private message.BoardSync _boardSync = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"boardSync", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public message.BoardSync boardSync
    {
      get { return _boardSync; }
      set { _boardSync = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}

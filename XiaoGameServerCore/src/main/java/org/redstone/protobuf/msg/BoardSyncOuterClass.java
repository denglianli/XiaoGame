// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BoardSync.proto

package org.redstone.protobuf.msg;

public final class BoardSyncOuterClass {
  private BoardSyncOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EnumsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.redstone.protobuf.msg.Enums)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.redstone.protobuf.msg.Enums}
   */
  public  static final class Enums extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.redstone.protobuf.msg.Enums)
      EnumsOrBuilder {
    // Use Enums.newBuilder() to construct.
    private Enums(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Enums() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Enums(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_Enums_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_Enums_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.class, org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.Builder.class);
    }

    public static final com.google.protobuf.Parser<Enums> PARSER =
        new com.google.protobuf.AbstractParser<Enums>() {
      public Enums parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Enums(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Enums> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code org.redstone.protobuf.msg.Enums.ChessType}
     */
    public enum ChessType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>None = 1;</code>
       */
      None(0, 1),
      /**
       * <code>White = 2;</code>
       */
      White(1, 2),
      /**
       * <code>Black = 3;</code>
       */
      Black(2, 3),
      ;

      /**
       * <code>None = 1;</code>
       */
      public static final int None_VALUE = 1;
      /**
       * <code>White = 2;</code>
       */
      public static final int White_VALUE = 2;
      /**
       * <code>Black = 3;</code>
       */
      public static final int Black_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      public static ChessType valueOf(int value) {
        switch (value) {
          case 1: return None;
          case 2: return White;
          case 3: return Black;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ChessType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ChessType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ChessType>() {
              public ChessType findValueByNumber(int number) {
                return ChessType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.getDescriptor().getEnumTypes().get(0);
      }

      private static final ChessType[] VALUES = values();

      public static ChessType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ChessType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.redstone.protobuf.msg.Enums.ChessType)
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      unknownFields.writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.redstone.protobuf.msg.BoardSyncOuterClass.Enums prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.redstone.protobuf.msg.Enums}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.redstone.protobuf.msg.Enums)
        org.redstone.protobuf.msg.BoardSyncOuterClass.EnumsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_Enums_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_Enums_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.class, org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.Builder.class);
      }

      // Construct using org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_Enums_descriptor;
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.Enums getDefaultInstanceForType() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.getDefaultInstance();
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.Enums build() {
        org.redstone.protobuf.msg.BoardSyncOuterClass.Enums result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.Enums buildPartial() {
        org.redstone.protobuf.msg.BoardSyncOuterClass.Enums result = new org.redstone.protobuf.msg.BoardSyncOuterClass.Enums(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.redstone.protobuf.msg.BoardSyncOuterClass.Enums) {
          return mergeFrom((org.redstone.protobuf.msg.BoardSyncOuterClass.Enums)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.redstone.protobuf.msg.BoardSyncOuterClass.Enums other) {
        if (other == org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.redstone.protobuf.msg.BoardSyncOuterClass.Enums parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.redstone.protobuf.msg.BoardSyncOuterClass.Enums) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.redstone.protobuf.msg.Enums)
    }

    // @@protoc_insertion_point(class_scope:org.redstone.protobuf.msg.Enums)
    private static final org.redstone.protobuf.msg.BoardSyncOuterClass.Enums defaultInstance;static {
      defaultInstance = new org.redstone.protobuf.msg.BoardSyncOuterClass.Enums();
    }

    public static org.redstone.protobuf.msg.BoardSyncOuterClass.Enums getDefaultInstance() {
      return defaultInstance;
    }

    public org.redstone.protobuf.msg.BoardSyncOuterClass.Enums getDefaultInstanceForType() {
      return defaultInstance;
    }

  }

  public interface ChessRowOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.redstone.protobuf.msg.ChessRow)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
     */
    java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType> getTypesList();
    /**
     * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
     */
    int getTypesCount();
    /**
     * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
     */
    org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType getTypes(int index);
  }
  /**
   * Protobuf type {@code org.redstone.protobuf.msg.ChessRow}
   */
  public  static final class ChessRow extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.redstone.protobuf.msg.ChessRow)
      ChessRowOrBuilder {
    // Use ChessRow.newBuilder() to construct.
    private ChessRow(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private ChessRow() {
      types_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChessRow(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType value = org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  types_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                types_.add(rawValue);
              }
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType value = org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    types_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  types_.add(rawValue);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          types_ = java.util.Collections.unmodifiableList(types_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessRow_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessRow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.class, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder.class);
    }

    public static final com.google.protobuf.Parser<ChessRow> PARSER =
        new com.google.protobuf.AbstractParser<ChessRow>() {
      public ChessRow parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChessRow(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChessRow> getParserForType() {
      return PARSER;
    }

    public static final int TYPES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> types_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType> types_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType>() {
              public org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType convert(java.lang.Integer from) {
                org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType result = org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType.valueOf(from);
                return result == null ? org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType.None : result;
              }
            };
    /**
     * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
     */
    public java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType> getTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType>(types_, types_converter_);
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
     */
    public int getTypesCount() {
      return types_.size();
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
     */
    public org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType getTypes(int index) {
      return types_converter_.convert(types_.get(index));
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < types_.size(); i++) {
        output.writeEnum(1, types_.get(i));
      }
      unknownFields.writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < types_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(types_.get(i));
        }
        size += dataSize;
        size += 1 * types_.size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.redstone.protobuf.msg.ChessRow}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.redstone.protobuf.msg.ChessRow)
        org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.class, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder.class);
      }

      // Construct using org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        types_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessRow_descriptor;
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow getDefaultInstanceForType() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.getDefaultInstance();
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow build() {
        org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow buildPartial() {
        org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow result = new org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          types_ = java.util.Collections.unmodifiableList(types_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.types_ = types_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow) {
          return mergeFrom((org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow other) {
        if (other == org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.getDefaultInstance()) return this;
        if (!other.types_.isEmpty()) {
          if (types_.isEmpty()) {
            types_ = other.types_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTypesIsMutable();
            types_.addAll(other.types_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> types_ =
        java.util.Collections.emptyList();
      private void ensureTypesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          types_ = new java.util.ArrayList<java.lang.Integer>(types_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
       */
      public java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType> getTypesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType>(types_, types_converter_);
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
       */
      public int getTypesCount() {
        return types_.size();
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType getTypes(int index) {
        return types_converter_.convert(types_.get(index));
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
       */
      public Builder setTypes(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypesIsMutable();
        types_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
       */
      public Builder addTypes(org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypesIsMutable();
        types_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
       */
      public Builder addAllTypes(
          java.lang.Iterable<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType> values) {
        ensureTypesIsMutable();
        for (org.redstone.protobuf.msg.BoardSyncOuterClass.Enums.ChessType value : values) {
          types_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.Enums.ChessType types = 1;</code>
       */
      public Builder clearTypes() {
        types_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.redstone.protobuf.msg.ChessRow)
    }

    // @@protoc_insertion_point(class_scope:org.redstone.protobuf.msg.ChessRow)
    private static final org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow defaultInstance;static {
      defaultInstance = new org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow();
    }

    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow getDefaultInstance() {
      return defaultInstance;
    }

    public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow getDefaultInstanceForType() {
      return defaultInstance;
    }

  }

  public interface ChessPlaceStatisticsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.redstone.protobuf.msg.ChessPlaceStatistics)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 num = 1;</code>
     *
     * <pre>
     * 棋子编号
     * </pre>
     */
    boolean hasNum();
    /**
     * <code>optional int32 num = 1;</code>
     *
     * <pre>
     * 棋子编号
     * </pre>
     */
    int getNum();

    /**
     * <code>optional float ratio = 2;</code>
     *
     * <pre>
     * 棋子放置率
     * </pre>
     */
    boolean hasRatio();
    /**
     * <code>optional float ratio = 2;</code>
     *
     * <pre>
     * 棋子放置率
     * </pre>
     */
    float getRatio();
  }
  /**
   * Protobuf type {@code org.redstone.protobuf.msg.ChessPlaceStatistics}
   */
  public  static final class ChessPlaceStatistics extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.redstone.protobuf.msg.ChessPlaceStatistics)
      ChessPlaceStatisticsOrBuilder {
    // Use ChessPlaceStatistics.newBuilder() to construct.
    private ChessPlaceStatistics(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private ChessPlaceStatistics() {
      num_ = 0;
      ratio_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChessPlaceStatistics(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              num_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              ratio_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.class, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder.class);
    }

    public static final com.google.protobuf.Parser<ChessPlaceStatistics> PARSER =
        new com.google.protobuf.AbstractParser<ChessPlaceStatistics>() {
      public ChessPlaceStatistics parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChessPlaceStatistics(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChessPlaceStatistics> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NUM_FIELD_NUMBER = 1;
    private int num_;
    /**
     * <code>optional int32 num = 1;</code>
     *
     * <pre>
     * 棋子编号
     * </pre>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 num = 1;</code>
     *
     * <pre>
     * 棋子编号
     * </pre>
     */
    public int getNum() {
      return num_;
    }

    public static final int RATIO_FIELD_NUMBER = 2;
    private float ratio_;
    /**
     * <code>optional float ratio = 2;</code>
     *
     * <pre>
     * 棋子放置率
     * </pre>
     */
    public boolean hasRatio() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float ratio = 2;</code>
     *
     * <pre>
     * 棋子放置率
     * </pre>
     */
    public float getRatio() {
      return ratio_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, num_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, ratio_);
      }
      unknownFields.writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, num_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, ratio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.redstone.protobuf.msg.ChessPlaceStatistics}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.redstone.protobuf.msg.ChessPlaceStatistics)
        org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.class, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder.class);
      }

      // Construct using org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ratio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_descriptor;
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics getDefaultInstanceForType() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.getDefaultInstance();
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics build() {
        org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics buildPartial() {
        org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics result = new org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.num_ = num_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ratio_ = ratio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics) {
          return mergeFrom((org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics other) {
        if (other == org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.getDefaultInstance()) return this;
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        if (other.hasRatio()) {
          setRatio(other.getRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int num_ ;
      /**
       * <code>optional int32 num = 1;</code>
       *
       * <pre>
       * 棋子编号
       * </pre>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 num = 1;</code>
       *
       * <pre>
       * 棋子编号
       * </pre>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>optional int32 num = 1;</code>
       *
       * <pre>
       * 棋子编号
       * </pre>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000001;
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 num = 1;</code>
       *
       * <pre>
       * 棋子编号
       * </pre>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        onChanged();
        return this;
      }

      private float ratio_ ;
      /**
       * <code>optional float ratio = 2;</code>
       *
       * <pre>
       * 棋子放置率
       * </pre>
       */
      public boolean hasRatio() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float ratio = 2;</code>
       *
       * <pre>
       * 棋子放置率
       * </pre>
       */
      public float getRatio() {
        return ratio_;
      }
      /**
       * <code>optional float ratio = 2;</code>
       *
       * <pre>
       * 棋子放置率
       * </pre>
       */
      public Builder setRatio(float value) {
        bitField0_ |= 0x00000002;
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float ratio = 2;</code>
       *
       * <pre>
       * 棋子放置率
       * </pre>
       */
      public Builder clearRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ratio_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.redstone.protobuf.msg.ChessPlaceStatistics)
    }

    // @@protoc_insertion_point(class_scope:org.redstone.protobuf.msg.ChessPlaceStatistics)
    private static final org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics defaultInstance;static {
      defaultInstance = new org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics();
    }

    public static org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics getDefaultInstance() {
      return defaultInstance;
    }

    public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics getDefaultInstanceForType() {
      return defaultInstance;
    }

  }

  public interface BoardSyncOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.redstone.protobuf.msg.BoardSync)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow> 
        getRowsList();
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow getRows(int index);
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    java.util.List<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder getRowsOrBuilder(
        int index);

    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics> 
        getStatisticsList();
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics getStatistics(int index);
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    int getStatisticsCount();
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    java.util.List<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder> 
        getStatisticsOrBuilderList();
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder getStatisticsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.redstone.protobuf.msg.BoardSync}
   */
  public  static final class BoardSync extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.redstone.protobuf.msg.BoardSync)
      BoardSyncOrBuilder {
    // Use BoardSync.newBuilder() to construct.
    private BoardSync(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private BoardSync() {
      rows_ = java.util.Collections.emptyList();
      statistics_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BoardSync(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rows_ = new java.util.ArrayList<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow>();
                mutable_bitField0_ |= 0x00000001;
              }
              rows_.add(input.readMessage(org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                statistics_ = new java.util.ArrayList<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics>();
                mutable_bitField0_ |= 0x00000002;
              }
              statistics_.add(input.readMessage(org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          statistics_ = java.util.Collections.unmodifiableList(statistics_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_BoardSync_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_BoardSync_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync.class, org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync.Builder.class);
    }

    public static final com.google.protobuf.Parser<BoardSync> PARSER =
        new com.google.protobuf.AbstractParser<BoardSync>() {
      public BoardSync parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BoardSync(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BoardSync> getParserForType() {
      return PARSER;
    }

    public static final int ROWS_FIELD_NUMBER = 1;
    private java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow> rows_;
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    public java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    public java.util.List<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
     */
    public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    public static final int STATISTICS_FIELD_NUMBER = 2;
    private java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics> statistics_;
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    public java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics> getStatisticsList() {
      return statistics_;
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    public java.util.List<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder> 
        getStatisticsOrBuilderList() {
      return statistics_;
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    public int getStatisticsCount() {
      return statistics_.size();
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics getStatistics(int index) {
      return statistics_.get(index);
    }
    /**
     * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
     */
    public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder getStatisticsOrBuilder(
        int index) {
      return statistics_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(1, rows_.get(i));
      }
      for (int i = 0; i < statistics_.size(); i++) {
        output.writeMessage(2, statistics_.get(i));
      }
      unknownFields.writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rows_.get(i));
      }
      for (int i = 0; i < statistics_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, statistics_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.redstone.protobuf.msg.BoardSync}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.redstone.protobuf.msg.BoardSync)
        org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSyncOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_BoardSync_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_BoardSync_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync.class, org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync.Builder.class);
      }

      // Construct using org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRowsFieldBuilder();
          getStatisticsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowsBuilder_.clear();
        }
        if (statisticsBuilder_ == null) {
          statistics_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          statisticsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.internal_static_org_redstone_protobuf_msg_BoardSync_descriptor;
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync getDefaultInstanceForType() {
        return org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync.getDefaultInstance();
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync build() {
        org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync buildPartial() {
        org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync result = new org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync(this);
        int from_bitField0_ = bitField0_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        if (statisticsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            statistics_ = java.util.Collections.unmodifiableList(statistics_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.statistics_ = statistics_;
        } else {
          result.statistics_ = statisticsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync) {
          return mergeFrom((org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync other) {
        if (other == org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync.getDefaultInstance()) return this;
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        if (statisticsBuilder_ == null) {
          if (!other.statistics_.isEmpty()) {
            if (statistics_.isEmpty()) {
              statistics_ = other.statistics_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureStatisticsIsMutable();
              statistics_.addAll(other.statistics_);
            }
            onChanged();
          }
        } else {
          if (!other.statistics_.isEmpty()) {
            if (statisticsBuilder_.isEmpty()) {
              statisticsBuilder_.dispose();
              statisticsBuilder_ = null;
              statistics_ = other.statistics_;
              bitField0_ = (bitField0_ & ~0x00000002);
              statisticsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatisticsFieldBuilder() : null;
            } else {
              statisticsBuilder_.addAllMessages(other.statistics_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = new java.util.ArrayList<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow>(rows_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder setRows(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder setRows(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder addRows(org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder addRows(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder addRows(
          org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder addRows(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public java.util.List<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.getDefaultInstance());
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.getDefaultInstance());
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessRow rows = 1;</code>
       */
      public java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRow.Builder, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessRowOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }

      private java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics> statistics_ =
        java.util.Collections.emptyList();
      private void ensureStatisticsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          statistics_ = new java.util.ArrayList<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics>(statistics_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder> statisticsBuilder_;

      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics> getStatisticsList() {
        if (statisticsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(statistics_);
        } else {
          return statisticsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public int getStatisticsCount() {
        if (statisticsBuilder_ == null) {
          return statistics_.size();
        } else {
          return statisticsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics getStatistics(int index) {
        if (statisticsBuilder_ == null) {
          return statistics_.get(index);
        } else {
          return statisticsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder setStatistics(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics value) {
        if (statisticsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatisticsIsMutable();
          statistics_.set(index, value);
          onChanged();
        } else {
          statisticsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder setStatistics(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder builderForValue) {
        if (statisticsBuilder_ == null) {
          ensureStatisticsIsMutable();
          statistics_.set(index, builderForValue.build());
          onChanged();
        } else {
          statisticsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder addStatistics(org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics value) {
        if (statisticsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatisticsIsMutable();
          statistics_.add(value);
          onChanged();
        } else {
          statisticsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder addStatistics(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics value) {
        if (statisticsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatisticsIsMutable();
          statistics_.add(index, value);
          onChanged();
        } else {
          statisticsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder addStatistics(
          org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder builderForValue) {
        if (statisticsBuilder_ == null) {
          ensureStatisticsIsMutable();
          statistics_.add(builderForValue.build());
          onChanged();
        } else {
          statisticsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder addStatistics(
          int index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder builderForValue) {
        if (statisticsBuilder_ == null) {
          ensureStatisticsIsMutable();
          statistics_.add(index, builderForValue.build());
          onChanged();
        } else {
          statisticsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder addAllStatistics(
          java.lang.Iterable<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics> values) {
        if (statisticsBuilder_ == null) {
          ensureStatisticsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, statistics_);
          onChanged();
        } else {
          statisticsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder clearStatistics() {
        if (statisticsBuilder_ == null) {
          statistics_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          statisticsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public Builder removeStatistics(int index) {
        if (statisticsBuilder_ == null) {
          ensureStatisticsIsMutable();
          statistics_.remove(index);
          onChanged();
        } else {
          statisticsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder getStatisticsBuilder(
          int index) {
        return getStatisticsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder getStatisticsOrBuilder(
          int index) {
        if (statisticsBuilder_ == null) {
          return statistics_.get(index);  } else {
          return statisticsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public java.util.List<? extends org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder> 
           getStatisticsOrBuilderList() {
        if (statisticsBuilder_ != null) {
          return statisticsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(statistics_);
        }
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder addStatisticsBuilder() {
        return getStatisticsFieldBuilder().addBuilder(
            org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.getDefaultInstance());
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder addStatisticsBuilder(
          int index) {
        return getStatisticsFieldBuilder().addBuilder(
            index, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.getDefaultInstance());
      }
      /**
       * <code>repeated .org.redstone.protobuf.msg.ChessPlaceStatistics statistics = 2;</code>
       */
      public java.util.List<org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder> 
           getStatisticsBuilderList() {
        return getStatisticsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder> 
          getStatisticsFieldBuilder() {
        if (statisticsBuilder_ == null) {
          statisticsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatistics.Builder, org.redstone.protobuf.msg.BoardSyncOuterClass.ChessPlaceStatisticsOrBuilder>(
                  statistics_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          statistics_ = null;
        }
        return statisticsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.redstone.protobuf.msg.BoardSync)
    }

    // @@protoc_insertion_point(class_scope:org.redstone.protobuf.msg.BoardSync)
    private static final org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync defaultInstance;static {
      defaultInstance = new org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync();
    }

    public static org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync getDefaultInstance() {
      return defaultInstance;
    }

    public org.redstone.protobuf.msg.BoardSyncOuterClass.BoardSync getDefaultInstanceForType() {
      return defaultInstance;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_redstone_protobuf_msg_Enums_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_redstone_protobuf_msg_Enums_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_redstone_protobuf_msg_ChessRow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_redstone_protobuf_msg_ChessRow_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_redstone_protobuf_msg_BoardSync_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_redstone_protobuf_msg_BoardSync_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017BoardSync.proto\022\031org.redstone.protobuf" +
      ".msg\"4\n\005Enums\"+\n\tChessType\022\010\n\004None\020\001\022\t\n\005" +
      "White\020\002\022\t\n\005Black\020\003\"E\n\010ChessRow\0229\n\005types\030" +
      "\001 \003(\0162*.org.redstone.protobuf.msg.Enums." +
      "ChessType\"2\n\024ChessPlaceStatistics\022\013\n\003num" +
      "\030\001 \001(\005\022\r\n\005ratio\030\002 \001(\002\"\203\001\n\tBoardSync\0221\n\004r" +
      "ows\030\001 \003(\0132#.org.redstone.protobuf.msg.Ch" +
      "essRow\022C\n\nstatistics\030\002 \003(\0132/.org.redston" +
      "e.protobuf.msg.ChessPlaceStatisticsB\002P\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_redstone_protobuf_msg_Enums_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_redstone_protobuf_msg_Enums_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_redstone_protobuf_msg_Enums_descriptor,
        new java.lang.String[] { });
    internal_static_org_redstone_protobuf_msg_ChessRow_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_redstone_protobuf_msg_ChessRow_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_redstone_protobuf_msg_ChessRow_descriptor,
        new java.lang.String[] { "Types", });
    internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_redstone_protobuf_msg_ChessPlaceStatistics_descriptor,
        new java.lang.String[] { "Num", "Ratio", });
    internal_static_org_redstone_protobuf_msg_BoardSync_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_redstone_protobuf_msg_BoardSync_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_redstone_protobuf_msg_BoardSync_descriptor,
        new java.lang.String[] { "Rows", "Statistics", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
